// This file was auto-generated by ML.NET Model Builder. 

using System;
using PricePredictionAIML.Model;

namespace PricePredictionAIML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                VendorID = 1F,
                Tpep_pickup_datetime = @"2020-05-01 00:02:28",
                Tpep_dropoff_datetime = @"2020-05-01 00:18:07",
                Passenger_count = 1F,
                Trip_distance = 0F,
                RatecodeID = 1F,
                Store_and_fwd_flag = false,
                PULocationID = 234F,
                DOLocationID = 256F,
                Payment_type = 1F,
                Fare_amount = 12.2F,
                Extra = 3F,
                Mta_tax = 0.5F,
                Tip_amount = 2.4F,
                Tolls_amount = 0F,
                Improvement_surcharge = 0.3F,
                Congestion_surcharge = 2.5F,
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Total_amount with predicted Total_amount from sample data...\n\n");
            Console.WriteLine($"VendorID: {sampleData.VendorID}");
            Console.WriteLine($"Tpep_pickup_datetime: {sampleData.Tpep_pickup_datetime}");
            Console.WriteLine($"Tpep_dropoff_datetime: {sampleData.Tpep_dropoff_datetime}");
            Console.WriteLine($"Passenger_count: {sampleData.Passenger_count}");
            Console.WriteLine($"Trip_distance: {sampleData.Trip_distance}");
            Console.WriteLine($"RatecodeID: {sampleData.RatecodeID}");
            Console.WriteLine($"Store_and_fwd_flag: {sampleData.Store_and_fwd_flag}");
            Console.WriteLine($"PULocationID: {sampleData.PULocationID}");
            Console.WriteLine($"DOLocationID: {sampleData.DOLocationID}");
            Console.WriteLine($"Payment_type: {sampleData.Payment_type}");
            Console.WriteLine($"Fare_amount: {sampleData.Fare_amount}");
            Console.WriteLine($"Extra: {sampleData.Extra}");
            Console.WriteLine($"Mta_tax: {sampleData.Mta_tax}");
            Console.WriteLine($"Tip_amount: {sampleData.Tip_amount}");
            Console.WriteLine($"Tolls_amount: {sampleData.Tolls_amount}");
            Console.WriteLine($"Improvement_surcharge: {sampleData.Improvement_surcharge}");
            Console.WriteLine($"Congestion_surcharge: {sampleData.Congestion_surcharge}");
            Console.WriteLine($"\n\nPredicted Total_amount: {predictionResult.Score}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
